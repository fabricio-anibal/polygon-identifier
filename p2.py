# -*- coding: utf-8 -*-
"""p2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LjPylbihmGIVZNGR_LQVOqPWy3DMgWVE
"""

import cv2
from google.colab.patches import cv2_imshow
#import tensorflow as tf

obj2=['Tria', 'Quad', 'Pent', 'Hexa', 'Hept', 'Circ', 'Elip', 'Estr', 'Cruz']

image = cv2.imread('00020.jpg')
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)



gray = cv2.erode(gray, None, iterations=2)

#modelo = tf.keras.applications.VGG16(weights='imagenet')

cv2_imshow(image)
cv2_imshow(gray)

canny = cv2.Canny(gray, 120, 255)

cv2_imshow(canny)

canny = cv2.dilate(canny, None, iterations=1)

#cv2_imshow(canny)

canny = cv2.erode(canny, None, iterations=1)

cv2_imshow(canny)

cnts,_ = cv2.findContours(canny, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

aux = image.copy()

for c in cnts:
  ep = 0.015*cv2.arcLength(c, True)
  approx = cv2.approxPolyDP(c, ep, True)
  print(len(approx))
  cv2.moments(c)

  x,y,w,h = cv2.boundingRect(approx)
  area = int(cv2.contourArea(c))
  cv2.putText(image, str(area),(x+w//4, y+h//2+5), cv2.FONT_HERSHEY_SIMPLEX, 0.3,(0,0,0),1,cv2.LINE_AA)

  cv2.drawContours(image, [c], -1, (255,255,255), 2)
  cv2_imshow(image)

cv2_imshow(image)

image = aux

import pandas as pd
import numpy as np

df = pd.read_csv("00020.txt")
matriz = df.to_numpy()

def verificaObjetoTXT(centro, objeto, matriz):
  acertou = 0
  for v in [matriz[: ,0]==objeto] :
    p1 = v[1:][:2]*608//1
    p2 = v[1:][2:]*608//1

    if (p1 < np.array(centro)).all() and (np.array(centro)<p2).all():
      acertou += 1

  return acertou